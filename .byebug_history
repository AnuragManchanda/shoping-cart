q
puts "as"
puts "$#{Checkout.process(cart_arr)}"
Checkout.process(cart_arr)
c
cart[params]
cart[free_item]
params
cart[item]
item
cart
c
products[item]['price']
amount = quantity * products[item]['price']
item
cart
c
PRODUCTS[item]["price"] - params['price']
params['price']
PRODUCTS[item]["price"]
c
PRODUCTS[item]["price"]
PRODUCTS
params['pay']
params['buy']
cart[item]
(cart[item] / params['buy'])
c
q
rule[rule_type]
rule.first
rule.first.
rule
q
item
cart
next
c
next
c
DEFINED_RULES[rule_type].nil?
q
rule_type.to_sym
rule_type.to_s
DEFINED_RULES[rule_type.to_s]
DEFINED_RULES[rule_type.to_s].nil?
DEFINED_RULES
DEFINED_RULES[rule_type].nil?
rule_type
q
rule_type == "bulk_discount"
rule_type = rule.first[0]
rule.first[0]
rule
rule.first
rule.first.key
rule.key
rule
 rule.key
c
amount = quantity * products[item]["price"]
q
item
q
JSON.parse(file)
file = File.read(Config.get['paths']['products'])
Config.get['paths']['products']
Config.get
q
item
cart
@rules[item]
params
rule_type
q
params
rule_type
step
next
@rules[item]
@rules
next
amount = quantity * PRODUCTS[item]["price"]
PRODUCTS[item]["price"]
cart
quantity
q
@products["ipd"]["price"]/100
@products["ipd"]["price"].to_f
@products["ipd"]["price"]
@products["ipd"]
@products
CONFIG
@products
c
@rules
@rules["ipd"]
@rules
cart
q
@cart
c
@cart
c
products["products"]
products["products]
products
c
 Product.new(config).get
c
products = Product.new(config).get
c
config["paths"]["products"]
config["paths"]
config[:path]
config
config.
config.inspect
config.path
config.paths
config
